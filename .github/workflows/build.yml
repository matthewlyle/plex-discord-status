name: Build and Release

on:
  push:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.9']

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller

    - name: Build executable
      run: |
        python -m PyInstaller --onefile --name=PlexDiscordStatus plex_discord_status.py

    - name: Create distribution package
      run: |
        python -c "import os; os.makedirs('dist', exist_ok=True)"
        cp config.ini dist/config.ini
        cp README.md dist/ || echo "README.md not found, skipping"

    - name: Create zip package (Windows)
      if: runner.os == 'Windows'
      run: powershell Compress-Archive -Path dist/* -DestinationPath PlexDiscordStatus-Windows-x64.zip

    - name: Create zip package (macOS/Linux)
      if: runner.os != 'Windows'
      run: cd dist && zip -r ../PlexDiscordStatus-${{ runner.os }}-${{ runner.arch }}.zip .

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: PlexDiscordStatus-${{ runner.os }}-${{ runner.arch }}
        path: PlexDiscordStatus-${{ runner.os }}-${{ runner.arch }}.zip

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          PlexDiscordStatus-Windows-x64/PlexDiscordStatus-Windows-x64.zip
          PlexDiscordStatus-macOS-x64/PlexDiscordStatus-macOS-x64.zip
          PlexDiscordStatus-Linux-x64/PlexDiscordStatus-Linux-x64.zip
        draft: false
        prerelease: false
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 